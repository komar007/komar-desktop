# Basic settings
# ==============

set -s escape-time 0
# Alacritty terminal features: 24-bit color & underline style passthrough
set -sa terminal-features "alacritty:RGB:usstyle"

set -g mouse on
set -g base-index 1
set -g renumber-windows on
set -g word-separators ' '
set -g history-limit 32000
set -g status-position top
set -g status-interval 10
set -g display-time 5000

set -wg mode-keys vi


# Key bindings
# ============

set -g prefix C-s
bind C-s send-keys C-s

# reloading config
bind R source ~/.tmux.conf

bind -n F10 set-window-option status-position

# copy-mode with vim-like behavior
# --------------------------------

bind [ copy-mode
# some emacs/readline-like motions
bind -T copy-mode-vi C-a send-keys -X start-of-line
bind -T copy-mode-vi C-e send-keys -X end-of-line
bind -T copy-mode-vi C-b send-keys -X cursor-left
bind -T copy-mode-vi C-f send-keys -X cursor-right
# rectangle selection
bind -T copy-mode-vi C-v \
    send-keys -X begin-selection \; \
    send-keys -X rectangle-toggle
# regular selection
bind -T copy-mode-vi v send-keys -X begin-selection
# copy selection to tmux buffer and X selection
bind -T copy-mode-vi y \
    send-keys -X pipe-no-clear "xsel -i --primary" \; \
    send-keys -X pipe "tmux load-buffer -" \; \
    send-keys -X cancel
# paste selection to terminal and quit copy mode
bind -T copy-mode-vi p \
    send-keys -X pipe "tmux load-buffer -b temp -" \; \
    send-keys -X cancel \; \
    run "sleep 0.1" \; \
    paste-buffer -drb temp
# copy mouse selection to tmux buffer and X selection
bind -T copy-mode-vi MouseDragEnd1Pane \
    send-keys -X pipe-no-clear "xsel -i --primary" \; \
    send-keys -X pipe "tmux load-buffer -"
# copy word to tmux buffer and X selection
bind -n DoubleClick1Pane \
    copy-mode -M \; \
    send-keys -X select-word \; \
    run "sleep 0.15" \; \
    send-keys -X pipe-no-clear "xsel -i --primary" \; \
    send-keys -X pipe "tmux load-buffer -" \; \
    send-keys -X cancel
bind -n MouseDown2Pane run-shell -b " tmux send-keys -l -- \"\$(xsel -o --primary)\""
bind -T copy-mode-vi r send-keys -X rectangle-toggle
bind -T copy-mode-vi Escape send-keys -X cancel
bind -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""

bind -n M-s 'copy-mode ; command-prompt -T search -i -p "search up" "send -X search-backward-incremental \"%%%\""'

# session management
# ------------------

# sessions are not maintained in any defined order, so there's no point going back and forth...
unbind (
unbind )

# ...jumping to last used session, however, makes perfect sense
bind - switch-client -l # last-used session
bind _ switch-client -l # ...also

bind w choose-tree -wsZ

# fzf session selector
# TODO: try to sort by last attached from CURRENT client
%hidden SESSION_LIST="\
tmux list-sessions -F \"##{session_activity} ##{session_name} ##{session_windows} win\" \
     | sort -rn"
%hidden TMUX_SESSION_LIST="\
fzf-tmux -p100%,100% -- \
    --with-nth=2.. \
    --preview-window=up,80%,wrap,border-bottom\
    --preview 'tmux capture-pane -pet {2}: | tail -n \$(tput lines)' \
"
bind \\ run-shell -b "\
    new_ses=\$($SESSION_LIST | $TMUX_SESSION_LIST | cut -d' ' -f 2); \
    [ -n \"\$new_ses\" ] && tmux switch-client -t \"\$new_ses\" || true \
"

# change session working directory, very much WiP - the prompt supports no completion:(
bind a command-prompt -T command -p "cd" "attach-session -t . -c \"%%%\""

# moving between windows
# ----------------------

# new window
bind c new-window -a -c "#{pane_current_path}" # "clone window": open to the right, with current pane's cwd
bind C new-window # classical new window: open as the last one, with session's cwd

# select first and last-used window
bind -n \uE101 select-window -t:1 # bound to Ctrl + m in alacritty
bind -n \uE100 last-window # bound to Ctrl + "-" in alacritty

# window ++, --
bind -n C-k previous-window
bind -n C-j next-window

# moving windows
bind -n C-Up   swap-window -t -1 -d # fallback
bind -n \uE104 swap-window -t -1 -d # bound to Ctrl + Shift + k in alacritty
bind -n C-Down swap-window -t +1 -d # fallback
bind -n \uE103 swap-window -t +1 -d # bound to Ctrl + Shift + j in alacritty

# splits - more like in vim, but with prefix, instead C-w
unbind \"
unbind \%
bind s split-window
bind v split-window -h

# fix pgup/pgdn to be like in most terminals
bind -n S-Pageup copy-mode -u
bind -n S-Pagedown send-keys Pagedown

# URL scraper
# -----------

%hidden TMP_CAPTURE=/tmp/tmux_capture
%hidden BAT_HIGHLIGHT="bat --theme OneHalfLight --color=always --decorations never"
%hidden FZF_OPEN="\
fzf-tmux -p100%,100% \
    --with-nth=2.. \
    --preview \" \
        grep -Fn {2} $TMP_CAPTURE \
        | cut -d: -f1 \
        | sed 's/^/-H /' \
        | xargs $BAT_HIGHLIGHT $TMP_CAPTURE \
    \" \
    --preview-window=up,80%,nowrap,border-bottom,+{1}/2 \
    --bind \"ctrl-y:execute(tmux set-buffer {2} && echo {2} | xsel -i --primary)\" \
    | cut -d' ' -f 2- \
    | xargs xdg-open \
    > /dev/null 2>&1 \
    || true \
"
%hidden UNIQ_STABLE="awk '!seen[$0]++'"
%hidden FIND_URLS="grep --color=none -onE '(https?):\/\/[^][ ^<>]+' | sed 's/:/ /' | tac | $UNIQ_STABLE"

# visible part of pane
bind u run-shell -b "tmux capture-pane -eJ -p | tee $TMP_CAPTURE | $FIND_URLS | $FZF_OPEN"
# whole history of pane
bind U run-shell -b "tmux capture-pane -eJ -p -S- -E- | tee $TMP_CAPTURE | $FIND_URLS | $FZF_OPEN"

# paste buffers
# -------------

# TODO: get fields from tmux and then format outside of tmux
%hidden LIST_BUFFERS="\
tmux list-buffers -F '%SRC% ##{buffer_name}%RESET% ##{buffer_sample} %DIM%(##{buffer_size} ##{?##{==:##{buffer_size},1},byte,bytes})%RESET%' \
    | sed -e \"s/%DIM%/\$(tput setaf 0)/g\" \
          -e \"s/%SRC%/\$(tput setaf 4)/g\" \
          -e \"s/%RESET%/\$(tput sgr0)/g\" \
"
%hidden FORMAT_X_SEL="sed \"1s/^/\$(tput setaf 1) selection\$(tput sgr0) /\""
%hidden FORMAT_X_CLIP="sed \"1s/^/\$(tput setaf 1) clipboard\$(tput sgr0) /\""

bind p run-shell -b "\
    sel=\$( \
        ( \
            xsel -o --primary | $FORMAT_X_SEL; \
            printf '\\0'; \
            $LIST_BUFFERS | head -n 1 | tr -d '\n'; \
            printf '\\0'; \
            xsel -o --clipboard | $FORMAT_X_CLIP; \
            printf '\\0'; \
            $LIST_BUFFERS | tail -n +2 | tr '\n' '\\0' \
        ) \
        | sed -ur \
            -e 's/(\\x0)+/\\1/g' \
            -e '1s/^\\x0//' \
        | fzf-tmux -p 100%,50% -y 9999 -- \
            --ansi \
            --read0 \
        | head -n 1 \
        | cut -d' ' -f 2 \
    ); \
    case \"\$sel\" in \
        '') ;; \
        selection) tmux send-keys -l -- \"\$(xsel -o --primary)\" ;; \
        clipboard) tmux send-keys -l -- \"\$(xsel -o --clipboard)\" ;; \
        *) tmux paste-buffer -b \$sel ;; \
    esac || true \
"

# Look and feel
# =============

set -g status "on"

set -g status-style bg=colour16,fg=white
set -wg window-status-style bg=colour0,fg=colour237
set -wg window-status-activity-style bg=colour237,fg=colour248
set -wg window-status-current-style bg=red,fg=colour237
set -wg pane-active-border-style fg=colour250
set -wg pane-border-style fg=colour237
set -wg clock-mode-colour colour109 #blue
set -wg window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg
set -g message-style bg=colour239,fg=colour223
set -g message-command-style bg=colour239,fg=colour223
set -g display-panes-active-colour colour250
set -g display-panes-colour colour237

set -g status-style "bg=#151515"
set -g status-justify "left"
set -g status-left-style none
set -g status-left-length "80"
set -g status-right-style none
set -g status-right-length "80"
set -wg window-status-separator ""

set -g status-left "#[bg=blue,fg=colour16]  #[fg=#6688aa,bg=#556699]▌#[fg=#445588,bg=#334466]▌#[bg=#223355,fg=white] #S #[bg=colour16]"
set -g status-right "#[fg=colour240,align=left]▏#{pane_title}#[align=right]#[fg=#222222,bg=#333355]▌#[fg=#334466,bg=#445577]▌#[bg=#556688,fg=#000000] %a %d %b #[fg=#aaaaaa,bold]%H:%M#[fg=#000000,nobold] ▏#[fg=#000000]#h "

%hidden WINDOW_FIRE="#[fg=red]#(~/.desktop_config/tmux/tmux_window_fire.sh #{window_id})"
set -wg window-status-current-format "#[fg=blue,bg=#000000]#{?window_zoomed_flag,▋,▏}#[fg=blue,bold]#I:#W$WINDOW_FIRE #[bg=colour16,nobold,noitalics,nounderscore]"
set -wg window-status-format "#{?window_bell_flag,#[bg=#331111#,fg=red#,bold],#[fg=colour240#,bg=#202020]}#{?window_zoomed_flag,▋,▏}#[fg=white]#I#[fg=colour243]#{?window_last_flag,#[italics]-,:}#[fg=#666666]#W$WINDOW_FIRE #[bg=colour16,fg=colour236,noitalics]"

set -wg pane-active-border-style bg=default,fg=blue
set -wg pane-border-style fg=colour237

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# Except true vim binds
# ======================================================

%hidden is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?\$'"
bind h   if-shell "$is_vim" 'send-keys C-w h' 'select-pane -L'
bind C-h if-shell "$is_vim" 'send-keys C-w h' 'select-pane -L'
bind j   if-shell "$is_vim" 'send-keys C-w j' 'select-pane -D'
bind C-j if-shell "$is_vim" 'send-keys C-w j' 'select-pane -D'
bind k   if-shell "$is_vim" 'send-keys C-w k' 'select-pane -U'
bind C-k if-shell "$is_vim" 'send-keys C-w k' 'select-pane -U'
bind l   if-shell "$is_vim" 'send-keys C-w l' 'select-pane -R'
bind C-l if-shell "$is_vim" 'send-keys C-w l' 'select-pane -R'
bind l   if-shell "$is_vim" 'send-keys C-w l' 'select-pane -R'
bind \\  if-shell "$is_vim" 'send-keys C-w BSpace' 'last-pane'

bind -T copy-mode-vi C-w switch-client -T copy-mode-vi-prefix
bind -T copy-mode-vi-prefix h select-pane -L
bind -T copy-mode-vi-prefix j select-pane -D
bind -T copy-mode-vi-prefix k select-pane -U
bind -T copy-mode-vi-prefix l select-pane -R
bind -T copy-mode-vi-prefix \\ select-pane -l
