# Basic settings
# ==============

set -g base-index 1
set -sg escape-time 0
set-option -g history-limit 32000
set-option -g status-position top
set-option -g renumber-windows on
setw -g mouse on
set-window-option -g mode-keys vi
setw -g word-separators ' '
set -g status-interval 10
set-option -g display-time 5000

# Alacritty terminal features: 24-bit color & underline style passthrough
set-option -ga terminal-features "alacritty:RGB:usstyle"

# Key bindings
# ============

set -g prefix C-s
bind-key C-s send-keys C-s

bind-key R source ~/.tmux.conf

bind-key -n F10 set-window-option status-position

# copy-mode with vim-like behavior
bind-key / copy-mode
bind-key -T copy-mode-vi C-v \
    send-keys -X begin-selection \; \
    send-keys -X rectangle-toggle
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y \
    send-keys -X pipe-no-clear "xsel -i --primary" \; \
    send-keys -X pipe "tmux load-buffer -"
bind-key -T copy-mode-vi MouseDragEnd1Pane \
    send-keys -X pipe-no-clear "xsel -i --primary" \; \
    send-keys -X pipe "tmux load-buffer -"
bind-key -n DoubleClick1Pane \
    copy-mode -M \; \
    send-keys -X select-word \; \
    run "sleep 0.15" \; \
    send-keys -X pipe-no-clear "xsel -i --primary" \; \
    send-keys -X pipe "tmux load-buffer -" \; \
    send-keys -X cancel
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""

bind-key -n M-s 'copy-mode ; command-prompt -T search -i -p "search up" "send -X search-backward-incremental \"%%%\""'

# session management
# ------------------

bind-key 9 switch-client -p # session++ (addition to standard prefix + "(")
bind-key 0 switch-client -n # session-- (addition to standard prefix + ")")
bind-key - switch-client -l # last-used session
bind-key _ switch-client -l # ...also

bind-key \\ choose-tree -wsZ

bind-key a command-prompt -T command -p "cd" "attach-session -t . -c \"%%%\""

# moving between windows
# ----------------------

# new window
bind-key c new-window # fallback to default key-binding (but use session cwd here)
bind-key -n \uE102 new-window -c "#{pane_current_path}" # bound to Ctrl + Shift + Enter in alacritty

# select first and last-used window
bind-key -n \uE101 select-window -t:1 # bound to Ctrl + m in alacritty
bind-key -n \uE100 last-window # bound to Ctrl + "-" in alacritty

# window ++, --
bind-key -n C-k previous-window
bind-key -n C-j next-window

# moving windows
bind-key -n C-Up   swap-window -t -1 -d # fallback
bind-key -n \uE104 swap-window -t -1 -d # bound to Ctrl + Shift + k in alacritty
bind-key -n C-Down swap-window -t +1 -d # fallback
bind-key -n \uE103 swap-window -t +1 -d # bound to Ctrl + Shift + j in alacritty

# splits
unbind-key \"
unbind-key \%
bind-key s split-window
bind-key v split-window -h

# fix pgup/pgdn to be like in most terminals
bind -n S-Pageup copy-mode -u
bind -n S-Pagedown send-keys Pagedown

# opening URLs
# ------------

FZF_OPEN="fzf-tmux -d20 \
          | xargs xdg-open \
          > /dev/null 2>&1 || true"
UNIQ_STABLE="awk '!seen[$0]++'"
FIND_URLS="grep --color=none -oE '(https?):\/\/[^][ ^]+' | tac | $UNIQ_STABLE"

# visible part of pane
bind o run-shell -b "tmux capture-pane -J -p | $FIND_URLS | $FZF_OPEN"
# whole history of pane
bind O run-shell -b "tmux capture-pane -J -p -S- -E- | $FIND_URLS | $FZF_OPEN"

# paste buffers
# -------------

LIST_BUFFERS="tmux list-buffers -F ' ##{buffer_name} ##{buffer_size} ##{?##{==:##{buffer_size},1},byte,bytes}: ##{buffer_sample}'"

# TODO: move to a separate script, escaping has become too tedious already
bind p run-shell -b " \
    sel=$( \
        ( \
            $LIST_BUFFERS | head -n 1 | tr -d '\n'; \
            printf '\\0'; \
            xsel -o --primary | sed '1s/^/ selection /'; \
            printf '\\0'; \
            xsel -o --clipboard | sed '1s/^/ clipboard /'; \
            printf '\\0'; \
            $LIST_BUFFERS | tail -n +2 | tr '\n' '\\0' \
        ) \
        | sed -ur \
            -e 's/(\\x0)+/\\1/g' \
            -e '1s/^\\x0//' \
        | fzf-tmux --read0 -p 100%,50% -y 9999 \
        | head -n 1 \
        | cut -d' ' -f 2 \
    ); \
    case \"\$sel\" in \
        '') ;; \
        selection) tmux send-keys -l -- \"\$(xsel -o --primary)\" ;; \
        clipboard) tmux send-keys -l -- \"\$(xsel -o --clipboard)\" ;; \
        *) tmux paste-buffer -b \$sel ;; \
    esac || true \
"

# Look and feel
# =============

set-option -g status "on"

set-option -g status-style bg=colour16,fg=white # bg=bg1, fg=fg1
set-window-option -g window-status-style bg=colour0,fg=colour237 # bg=yellow, fg=bg1
set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3
set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1
set-option -g pane-active-border-style fg=colour250 #fg2
set-option -g pane-border-style fg=colour237 #bg1
set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1
set-option -g display-panes-active-colour colour250 #fg2
set-option -g display-panes-colour colour237 #bg1

set-window-option -g clock-mode-colour colour109 #blue
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

set-option -g status-justify "left"
set-option -g status-left-style none
set-option -g status-left-length "80"
set-option -g status-right-style none
set-option -g status-right-length "80"
set-window-option -g window-status-separator ""

set-option -g status-left "#[bg=blue,fg=colour16]  #[fg=#6688aa,bg=#556699]▌#[fg=#445588,bg=#334466]▌#[bg=#223355,fg=white] #S #[bg=colour16]"
set-option -g status-right "#[align=left]#[fg=colour240]▏ #{pane_title}#[align=right]%a %d %b %k:%M #[fg=#001133,bg=#112244]▌#[fg=#223355,bg=#334466]▌#[bg=#445577,fg=white] #h "

set-window-option -g window-status-current-format "#[fg=blue,bg=#383838]#{?window_zoomed_flag,▋,▏}#[fg=blue,bold]#I:#W #[bg=colour16,nobold,noitalics,nounderscore]"
set-window-option -g window-status-format "#{?window_bell_flag,#[bg=#331111#,fg=red#,bold],#[fg=colour240#,bg=#202020]}#{?window_zoomed_flag,▋,▏}#[fg=white]#I#[fg=colour243]#{?window_last_flag,#[italics]^,:}#[fg=#666666]#W #[bg=colour16,fg=colour236,noitalics]"

set -g pane-active-border-style bg=default,fg=blue
set -g pane-border-style fg=colour237

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# Except true vim binds
# ======================================================

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key h    if-shell "$is_vim" 'send-keys C-w h' 'select-pane -L'
bind-key C-h  if-shell "$is_vim" 'send-keys C-w h' 'select-pane -L'
bind-key j    if-shell "$is_vim" 'send-keys C-w j' 'select-pane -D'
bind-key C-j  if-shell "$is_vim" 'send-keys C-w j' 'select-pane -D'
bind-key k    if-shell "$is_vim" 'send-keys C-w k' 'select-pane -U'
bind-key C-k  if-shell "$is_vim" 'send-keys C-w k' 'select-pane -U'
bind-key l    if-shell "$is_vim" 'send-keys C-w l' 'select-pane -R'
bind-key C-l  if-shell "$is_vim" 'send-keys C-w l' 'select-pane -R'
bind-key l    if-shell "$is_vim" 'send-keys C-w l' 'select-pane -R'
bind-key BSpace   if-shell "$is_vim" 'send-keys C-w BSpace' 'last-pane'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi C-w switch-client -T copy-mode-vi-prefix
bind-key -T copy-mode-vi-prefix h select-pane -L
bind-key -T copy-mode-vi-prefix j select-pane -D
bind-key -T copy-mode-vi-prefix k select-pane -U
bind-key -T copy-mode-vi-prefix l select-pane -R
bind-key -T copy-mode-vi-prefix BSpace select-pane -l
